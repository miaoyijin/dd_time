注意事项如下：

1：mysql建表引擎选择

略
2：mysql 字段选择

1: 可以使用tyint的使用tyint 
2：可以使用int 的使用int
3: 字段not null 
4：优先考虑char,varchar,text【varchar可以建立索引，查询性能高，text只支持全文索引,性能低,查询准确度低】

【
-varchar 和 text字段对比：text只能简历全文索引

- text 是要要进overflow存储。 也是对于text字段，不会和行数据存在一起。但原则上不会全部overflow ,
会有768字节和原始的行存储在一块，多于768的行会存在和行相同的Page或是其它Page上。

- varchar 在MySQL内部属于从blob发展出来的一个结构，在早期版本中innobase中，也是768字节以后进行overfolw存储。

- 对于Innodb-plugin后： 对于变长字段处理都是20Byte后进行overflow存储
（在新的row_format下：dynimic compress）

- 在Innobase中,变长字段，是尽可能的存储到一个Page里，这样，如果使用到这些大的变长字段，会造成一个Page里能容纳的行
数很少，在查询时，虽然没查询这些大的字段，但也会加载到innodb buffer pool中，等于浪费的内存。
（buffer pool 的缓存是按page为单位）（不在一个page了会增加随机的IO）

- 在innodb-plugin中为了减少这种大的变长字段对内存的浪费，引入了大于20个字节的，都进行overflow存储，
而且希望不要存到相同的page中，为了增加一个page里能存储更多的行，提高buffer pool的利用率。 这也要求我们，
如果不是特别需要就不要读取那些变长的字段。
】

6：每个表加上updatetime 和addtime 字段
7:大文本字段考虑分表

3: mysql索引的选择
