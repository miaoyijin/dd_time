1:什么是分布式架构
Teradata大中华区服务部总经理辛儿伦介绍说，从上世纪60年代应用于主机的大型主机系统，到80年代应用于PC的CS 架构，
一直到90年代互联网的出现，系统越来越朝小型化和分布式发展。2000年WebService出现后，SOA被誉为下一代Web服务的基础框架，
已经成为计算机信息领域的一个新的发展方向。


2：分布式架构演进：cs -> bs-> soa


3：soa特性：
标准化服务合同
在同一个服务仓库中的服务都符合同样的合同设计标准

服务松耦合
服务合同施加了消费者低耦合的要求，而它们自己也与周围的环境脱钩

服务抽象
服务合同只包含基本信息， 以及仅能发布在服务合同中的与服务有关的信息

服务可重用性
服务合同只包含并表达不可知逻辑，并充当可重复使用的企业资源

服务自治
服务对底层的运行时执行环境行使用高层次控制

服务无状态
服务在必要时会通过推迟状态信息的管理最大限度地较少资源的消耗

服务可发现性
服务被补充了有通信的元数据，通过它们，服务可以被有效地发现和解释

服务可组合性
服务是有效的组合参与者，而不管该组合的大小和复杂性如何






soa 实现方案： esb 和 微服务
soa和webservice 关系：soa 是基于webservice 改进而来的


4：soa架构角色

1、服务请求者：服务请求者是一个应用程序、一个软件模块或需要一个服务的另一个服务。它发起对注册中心中的服务的查询，通过传输绑定服务，并且执行服务功能。服务请求者根据接口契约来执行服务。
2、服务提供者：服务提供者是一个可通过网络寻址的实体，它接受和执行来自请求者的请求。它将自己的服务和接口契约发布到服务注册中心，以便服务请求者可以发现和访问该服务。
图2面向服务的体系结构中的角色
3、服务注册中心：服务注册中心是服务发现的支持者。它包含一个可用服务的存储库，并允许感兴趣的服务请求者查找服务提供者接口。
面向服务的体系结构中的每个实体都扮演着服务提供者、请求者和注册中心这三种角色中的某一种（或多种）。面向服务的体系结构中的操作包括：
发布：为了使服务可访问．需要发布服务描述以使服务请求者可以发现和调用它。
查询：服务请求者定位服务．方法是查询服务注册中心来找到满足其标准的服务。
绑定和调用：在检索完服务描述之后，服务请求者继续根据服务描述中的信息来调用服务。
面向服务的体系结构中的构件包括：
（1）服务：可以通过已发布接口使用服务，并且允许服务使用者调用服务。
（2）服务描述：服务描述指定服务使用者与服务提供者交互的方式。它指定来自服务的请求和响应的格式。服务描述可以指定一组前提条件、后置条件和/或服务质量（Q0S）级别。【类似grzp proto,rest等】
